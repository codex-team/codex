var codex=(window.webpackJsonpcodex=window.webpackJsonpcodex||[]).push([["main"],{"./public/app/css/main.css":function(module,exports){eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack://codex/./public/app/css/main.css?")},"./public/app/js/main.js":function(module,exports,__webpack_require__){"use strict";eval('\n\n__webpack_require__(/*! ../css/main.css */ "./public/app/css/main.css");\n\n/**\n * CodeX community id at vk.com.\n * used by vkWidget module\n */\nvar VK_COMMUNITY_ID = 103229636;\n\nvar codex = function (codex_) {\n\n    \'use strict\';\n\n    codex_.settings = {};\n\n    /**\n    * Preparation method\n    */\n    codex_.init = function (settings) {\n\n        /** Save settings or use defaults */\n        for (var set in settings) {\n\n            this.settings[set] = settings[set] || this.settings[set] || null;\n        }\n\n        codex.scrollUp.init();\n\n        codex.codeStyling.init(\'.article-code__content\');\n\n        codex.vkWidget.init({\n            id: \'vk_groups\',\n            display: {\n                \'mode\': 3,\n                \'width\': \'auto\'\n            },\n            communityId: VK_COMMUNITY_ID\n        });\n\n        /**\n         * Acitve play-video buttons\n         */\n        var playVideoButton = document.querySelector(\'[name="js-show-player"]\');\n\n        if (playVideoButton) {\n\n            var Player = __webpack_require__(/*! ./modules/player */ "./public/app/js/modules/player.js").default;\n\n            new Player({\n                sourceURL: \'public/app/img/products/ar-tester.mp4\',\n                toggler: playVideoButton,\n                wrapperSelector: \'.product-card--ar-tester\'\n            });\n        }\n    };\n\n    return codex_;\n}({});\n\n/**\n* Document ready event listener\n* @usage codex.docReady(function(){ # code ... } );\n*/\ncodex.docReady = function (f) {\n\n    return (/in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f()\n    );\n};\n\n/**\n* Pages\n*/\ncodex.admin = __webpack_require__(/*! ./modules/admin */ "./public/app/js/modules/admin.js");\ncodex.join = __webpack_require__(/*! ./modules/join */ "./public/app/js/modules/join.js");\n\n/**\n * Modules\n */\ncodex.core = __webpack_require__(/*! ./modules/core */ "./public/app/js/modules/core.js");\ncodex.dragndrop = __webpack_require__(/*! ./modules/dragndrop */ "./public/app/js/modules/dragndrop.js");\ncodex.scrollUp = __webpack_require__(/*! ./modules/scrollUp */ "./public/app/js/modules/scrollUp.js");\ncodex.sharer = __webpack_require__(/*! ./modules/sharer */ "./public/app/js/modules/sharer.js");\ncodex.developer = __webpack_require__(/*! ./modules/bestDevelopers */ "./public/app/js/modules/bestDevelopers.js");\n// codex.simpleCode = require(\'./modules/simpleCodeStyling\');\ncodex.showMoreNews = __webpack_require__(/*! ./modules/showMoreNews */ "./public/app/js/modules/showMoreNews.js");\ncodex.polyfills = __webpack_require__(/*! ./modules/polyfills */ "./public/app/js/modules/polyfills.js");\ncodex.ajax = __webpack_require__(/*! ./modules/ajax */ "./public/app/js/modules/ajax.js");\ncodex.profile = __webpack_require__(/*! ./modules/profile */ "./public/app/js/modules/profile.js");\ncodex.helpers = __webpack_require__(/*! ./modules/helpers */ "./public/app/js/modules/helpers.js");\ncodex.quiz = __webpack_require__(/*! ./modules/quiz */ "./public/app/js/modules/quiz.js");\ncodex.quizForm = __webpack_require__(/*! ./modules/quizForm */ "./public/app/js/modules/quizForm.js");\ncodex.transport = __webpack_require__(/*! ./modules/transport */ "./public/app/js/modules/transport.js");\ncodex.vkWidget = __webpack_require__(/*! ./modules/vkWidget */ "./public/app/js/modules/vkWidget.js");\ncodex.codeStyling = __webpack_require__(/*! ./modules/codeStyling */ "./public/app/js/modules/codeStyling.js");\n\nmodule.exports = codex;\n\n//# sourceURL=webpack://codex/./public/app/js/main.js?')},"./public/app/js/modules/admin.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Admin page methods\n */\nmodule.exports = function (admin) {\n\n    /**\n     * Initializes dragndrop module\n     * @uses  codex.dragndrop\n     */\n    function initDragNDrop() {\n\n        codex.dragndrop({\n            droppableClass: 'list-item',\n\n            findDraggable: function findDraggable(e) {\n\n                var target = e.target.closest('.draggable');\n\n                if (target) return target.closest('.list-item');\n\n                return null;\n            },\n\n            makeAvatar: function makeAvatar(elem) {\n\n                var avatar = {};\n\n                avatar.elem = elem.cloneNode(true);\n                avatar.elem.classList.add('dnd-avatar');\n\n                elem.parentNode.insertBefore(avatar.elem, elem.nextSibling);\n                elem.classList.add('no-display');\n\n                avatar.rollback = function () {\n\n                    avatar.elem.parentNode.removeChild(avatar.elem);\n                    elem.classList.remove('no-display');\n                };\n\n                return avatar;\n            },\n\n            targetChanged: function targetChanged(target, newTarget, avatar) {\n\n                if (!newTarget) return;\n\n                var targetPosition = newTarget.compareDocumentPosition(avatar.elem);\n\n                if (targetPosition & 4) {\n\n                    newTarget.parentNode.insertBefore(avatar.elem, newTarget);\n                } else if (targetPosition & 2) {\n\n                    newTarget.parentNode.insertBefore(avatar.elem, newTarget.nextSibling);\n                }\n            },\n\n            move: function move() {},\n\n            targetReached: function targetReached(target, avatar, elem) {\n\n                target.parentNode.insertBefore(elem, target.nextSibling);\n\n                avatar.elem.parentNode.removeChild(avatar.elem);\n                elem.classList.remove('no-display');\n\n                var itemId = elem.dataset.id,\n                    itemType = elem.dataset.type,\n                    itemBelowValue = null,\n                    nextSibling;\n\n                if (nextSibling == elem.nextElementSibling) {\n\n                    itemBelowValue = nextSibling.dataset.type + ':' + nextSibling.dataset.id;\n                }\n\n                var ajaxData = {\n                    success: function success() {\n\n                        document.getElementById('saved').classList.remove('top-menu__saved_hidden');\n\n                        window.setTimeout(function () {\n\n                            document.getElementById('saved').classList.add('top-menu__saved_hidden');\n                        }, 1000);\n                    },\n                    type: 'POST',\n                    url: '/admin/feed',\n                    data: JSON.stringify({\n                        'item_id': itemId,\n                        'item_type': itemType,\n                        'item_below_value': itemBelowValue\n                    })\n                };\n\n                codex.core.ajax(ajaxData);\n            }\n        });\n        // body...\n    }\n\n    /**\n     * Module initialization\n     * @param  {Object}      params             - init params\n     * @param  {String|null} params.listType    - feed list type (\"cards\"|\"list\")\n     */\n    admin.init = function (params) {\n\n        codex.core.log('Initialized.', 'Module admin');\n\n        if (params.listType == 'cards') {\n\n            var items = document.querySelectorAll('.feed-item');\n\n            for (var i = items.length - 1; i > -1; i--) {\n\n                items[i].classList.add('draggable');\n                items[i].classList.add('feed-item--dnd');\n                items[i].classList.add('list-item');\n            }\n        }\n\n        initDragNDrop();\n    };\n\n    return admin;\n}({});\n\n//# sourceURL=webpack://codex/./public/app/js/modules/admin.js?")},"./public/app/js/modules/ajax.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar ajax = function () {\n\n    var xhr_ = function xhr_(xhr) {\n\n        var objectToQueryString = function objectToQueryString(a) {\n\n            var prefix, s, add, name, r20, output;\n\n            s = [];\n            r20 = /%20/g;\n            add = function add(key, value) {\n\n                // If value is a function, invoke it and return its value\n                if (typeof value == 'function') {\n\n                    value = value();\n                } else {\n\n                    value = value === null ? '' : value;\n                }\n\n                s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value);\n            };\n            if (a instanceof Array) {\n\n                for (name in a) {\n\n                    add(name, a[name]);\n                }\n            } else {\n\n                for (prefix in a) {\n\n                    buildParams(prefix, a[prefix], add);\n                }\n            }\n            output = s.join('&').replace(r20, '+');\n            return output;\n        };\n\n        var buildParams = function buildParams(prefix, obj, add) {\n\n            var name, i, l, rbracket;\n\n            rbracket = /\\[\\]$/;\n            if (obj instanceof Array) {\n\n                for (i = 0, l = obj.length; i < l; i++) {\n\n                    if (rbracket.test(prefix)) {\n\n                        add(prefix, obj[i]);\n                    } else {\n\n                        buildParams(prefix + '[' + (_typeof(obj[i]) === 'object' ? i : '') + ']', obj[i], add);\n                    }\n                }\n            } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object') {\n\n                // Serialize object item.\n                for (name in obj) {\n\n                    buildParams(prefix + '[' + name + ']', obj[name], add);\n                }\n            } else {\n\n                // Serialize scalar item.\n                add(prefix, obj);\n            }\n        };\n\n        xhr.call = function (data) {\n\n            if (!data || !data.url) {\n\n                console.warn('url wasn\\'t passed into ajax method');\n                return;\n            }\n\n            var XMLHTTP = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'),\n                successCallback;\n\n            data.type = data.type || 'GET';\n            data.url = data.url;\n            data.async = data.async || false;\n            data.data = data.data || '';\n            data.formData = data.formData || false;\n            data['content-type'] = data.contentType || 'text/html';\n            successCallback = data.success || successCallback;\n\n            if (data.type == 'GET' && data.data) {\n\n                data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n            }\n\n            if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n                data.beforeSend.call();\n            }\n\n            XMLHTTP.open(data.type, data.url, data.async);\n            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n            XMLHTTP.setRequestHeader('Connection', 'close');\n            XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            XMLHTTP.onreadystatechange = function () {\n\n                if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200 && successCallback) {\n\n                    successCallback.call(XMLHTTP.responseText);\n                }\n            };\n\n            XMLHTTP.send(data.formData || objectToQueryString(data.data));\n        };\n\n        xhr.parseHTML = function (markup) {\n\n            var doc = document.implementation.createHTMLDocument('');\n\n            if (markup.toLowerCase().indexOf('<!doctype') > -1) {\n\n                doc.documentElement.innerHTML = markup;\n            } else {\n\n                doc.body.innerHTML = markup;\n            }\n            return doc;\n        };\n\n        /**\n         * Adapted from {@link http://www.bulgaria-web-developers.com/projects/javascript/serialize/}\n         * Changes:\n         *     Ensures proper URL encoding of name as well as value\n         *     Preserves element order\n         *     XHTML and JSLint-friendly\n         *     Disallows disabled form elements and reset buttons as per HTML4 [successful controls]{@link http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2}\n         *         (as used in jQuery). Note: This does not serialize <object>\n         *         elements (even those without a declare attribute) or\n         *         <input type=\"file\" />, as per jQuery, though it does serialize\n         *         the <button>'s (which are potential HTML4 successful controls) unlike jQuery\n         * @license MIT/GPL\n        */\n        xhr.serialize = function (form) {\n\n            'use strict';\n\n            var i,\n                j,\n                len,\n                jLen,\n                formElement,\n                q = [];\n\n            function urlencode(str) {\n\n                // http://kevin.vanzonneveld.net\n                // Tilde should be allowed unescaped in future versions of PHP (as reflected below), but if you want to reflect current\n                // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n                return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/\\*/g, '%2A').replace(/%20/g, '+');\n            }\n            function addNameValue(name, value) {\n\n                q.push(urlencode(name) + '=' + urlencode(value));\n            }\n            if (!form || !form.nodeName || form.nodeName.toLowerCase() !== 'form') {\n\n                throw 'You must supply a form element';\n            }\n            for (i = 0, len = form.elements.length; i < len; i++) {\n\n                formElement = form.elements[i];\n                if (formElement.name === '' || formElement.disabled) {\n\n                    continue;\n                }\n                switch (formElement.nodeName.toLowerCase()) {\n                    case 'input':\n                        switch (formElement.type) {\n                            case 'text':\n                            case 'email':\n                            case 'hidden':\n                            case 'password':\n                            case 'button': // Not submitted when submitting form manually, though jQuery does serialize this and it can be an HTML4 successful control\n                            case 'submit':\n                                addNameValue(formElement.name, formElement.value);\n                                break;\n                            case 'checkbox':\n                            case 'radio':\n                                if (formElement.checked) {\n\n                                    addNameValue(formElement.name, formElement.value);\n                                }\n                                break;\n                            case 'file':\n                                // addNameValue(formElement.name, formElement.value); // Will work and part of HTML4 \"successful controls\", but not used in jQuery\n                                break;\n                            case 'reset':\n                                break;\n                        }\n                        break;\n                    case 'textarea':\n                        addNameValue(formElement.name, formElement.value);\n                        break;\n                    case 'select':\n                        switch (formElement.type) {\n                            case 'select-one':\n                                addNameValue(formElement.name, formElement.value);\n                                break;\n                            case 'select-multiple':\n                                for (j = 0, jLen = formElement.options.length; j < jLen; j++) {\n\n                                    if (formElement.options[j].selected) {\n\n                                        addNameValue(formElement.name, formElement.options[j].value);\n                                    }\n                                }\n                                break;\n                        }\n                        break;\n                    case 'button':\n                        // jQuery does not submit these, though it is an HTML4 successful control\n                        switch (formElement.type) {\n                            case 'reset':\n                            case 'submit':\n                            case 'button':\n                                addNameValue(formElement.name, formElement.value);\n                                break;\n                        }\n                        break;\n                }\n            }\n\n            return q.join('&');\n        };\n    };\n\n    return {\n        xhr: xhr_\n    };\n}({});\n\nmodule.exports = ajax;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/ajax.js?")},"./public/app/js/modules/bestDevelopers.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * codex.bestDevelopers module\n * Sets best developers values in admin/user for further output in templates/developers.php\n */\nvar developer = function () {\n\n    var bind = function bind() {\n\n        var chBoxes = document.querySelectorAll('.developer-checkbox');\n\n        for (var i = chBoxes.length - 1; i > -1; i--) {\n\n            chBoxes[i].addEventListener('change', toggle);\n        }\n    };\n\n    /**\n     * Sends ajax data 0 or 1, whether user is best developer or not\n     * @param {Event} event\n     * @uses codex.core.ajax\n     */\n\n    var toggle = function toggle(event) {\n\n        var data = {\n            data: 'id=' + event.target.id + '&value=' + (event.target.checked ? 1 : 0),\n            url: '/admin/developer'\n        };\n\n        codex.core.ajax(data);\n    };\n\n    return {\n        bind: bind\n    };\n}();\n\nmodule.exports = developer;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/bestDevelopers.js?")},"./public/app/js/modules/codeStyling.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Code Styling module\n */\nmodule.exports = function codeStyling() {\n\n    'use strict';\n\n    /**\n     * DOM manipulations helper\n     */\n\n    var $ = __webpack_require__(/*! ./dom */ \"./public/app/js/modules/dom.js\").default;\n\n    /**\n     * Extrnal library for code styling\n     * @link https://highlightjs.org\n     * @type {Object}\n     */\n    var library = {\n        js: '//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js',\n        css: '//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github-gist.min.css'\n    };\n\n    /**\n     * Loads styling library\n     */\n    var prepare = function prepare() {\n\n        return Promise.all([$.loadResource('JS', library.js, 'highlight'), $.loadResource('CSS', library.css, 'highlight')]).catch(function (err) {\n            return console.warn('Cannot load code styling module: ', err);\n        }).then(function () {\n            return console.log('Code Styling is ready');\n        });\n    };\n\n    /**\n     * Finds code blocks and fires highlighting\n     * @param {String} codeBlocksSelector - where to find <code> blocks\n     */\n    var init = function init(codeBlocksSelector) {\n\n        var codeBlocks = document.querySelectorAll(codeBlocksSelector);\n\n        if (codeBlocks) {\n\n            prepare().then(function () {\n\n                if (!window.hljs) {\n\n                    console.warn('Code Styling script loaded but not ready');\n                    return;\n                }\n\n                for (var i = codeBlocks.length - 1; i >= 0; i--) {\n\n                    window.hljs.highlightBlock(codeBlocks[i]);\n                }\n            });\n        }\n    };\n\n    return {\n        init: init\n    };\n}();\n\n//# sourceURL=webpack://codex/./public/app/js/modules/codeStyling.js?")},"./public/app/js/modules/core.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n* Significant core methods\n*/\nmodule.exports = function () {\n\n    /** Logging method */\n    var log = function log(str, prefix, type, arg) {\n\n        var staticLength = 32;\n\n        if (prefix) {\n\n            prefix = prefix.length < staticLength ? prefix : prefix.substr(0, staticLength - 2);\n\n            while (prefix.length < staticLength - 1) {\n\n                prefix += ' ';\n            }\n\n            prefix += ':';\n            str = prefix + str;\n        }\n\n        type = type || 'log';\n\n        try {\n\n            if ('console' in window && window.console[type]) {\n\n                if (arg) console[type](str, arg);else console[type](str);\n            }\n        } catch (e) {}\n    };\n\n    /**\n    * Native ajax method.\n    * @param {Object} data\n    */\n    var ajax = function ajax(data) {\n\n        if (!data || !data.url) {\n\n            return;\n        }\n\n        var XMLHTTP = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'),\n            successFunction = function successFunction() {};\n\n        data.async = true;\n        data.type = data.type || 'GET';\n        data.data = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        successFunction = data.success || successFunction;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n        }\n\n        if (data.withCredentials) {\n\n            XMLHTTP.withCredentials = true;\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n            data.beforeSend.call();\n        }\n\n        XMLHTTP.open(data.type, data.url, data.async);\n        XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        XMLHTTP.onreadystatechange = function () {\n\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\n                successFunction(XMLHTTP.responseText);\n            }\n        };\n\n        XMLHTTP.send(data.data);\n    };\n\n    return {\n        ajax: ajax,\n        log: log\n    };\n}();\n\n//# sourceURL=webpack://codex/./public/app/js/modules/core.js?")},"./public/app/js/modules/dom.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * DOM manipulations methods\n */\nvar DOM = function () {\n    function DOM() {\n        _classCallCheck(this, DOM);\n    }\n\n    _createClass(DOM, null, [{\n        key: 'make',\n\n        /**\n         * Helper for making Elements with classname and attributes\n         * @param  {string} tagName           - new Element tag name\n         * @param  {array|string} classNames  - list or name of CSS classname(s)\n         * @param  {Object} attributes        - any attributes\n         * @return {Element}\n         */\n        value: function make(tagName, classNames, attributes) {\n\n            var el = document.createElement(tagName);\n\n            if (Array.isArray(classNames)) {\n                var _el$classList;\n\n                (_el$classList = el.classList).add.apply(_el$classList, _toConsumableArray(classNames));\n            } else if (classNames) {\n\n                el.classList.add(classNames);\n            }\n\n            for (var attrName in attributes) {\n\n                el[attrName] = attributes[attrName];\n            }\n\n            return el;\n        }\n\n        /**\n        * Replaces node with\n        * @param {Element} nodeToReplace\n        * @param {Element} replaceWith\n        */\n\n    }, {\n        key: 'replace',\n        value: function replace(nodeToReplace, replaceWith) {\n\n            return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n        }\n\n        /**\n        * getElementById alias\n        * @param {String} elementId\n        */\n\n    }, {\n        key: 'get',\n        value: function get(elementId) {\n\n            return document.getElementById(elementId);\n        }\n\n        /**\n        * Loads static resourse: CSS or JS\n        * @param {string} type  - CSS|JS\n        * @param {string} path  - resource path\n        * @param {string} inctanceName - unique name of resource\n        * @return Promise\n        */\n\n    }, {\n        key: 'loadResource',\n        value: function loadResource(type, path, instanceName) {\n\n            /**\n             * Imported resource ID prefix\n             * @type {String}\n             */\n            var resourcePrefix = 'cdx-resourse';\n\n            return new Promise(function (resolve, reject) {\n\n                if (!type || !['JS', 'CSS'].includes(type)) {\n\n                    reject('Unexpected resource type passed. \\xABCSS\\xBB or \\xABJS\\xBB expected, \\xAB' + type + '\\xBB passed');\n                }\n\n                var node = void 0;\n\n                /** Script is already loaded */\n                if (!instanceName) {\n\n                    reject('Instance name is missed');\n                } else if (document.getElementById(resourcePrefix + '-' + type.toLowerCase() + '-' + instanceName)) {\n\n                    resolve(path);\n                }\n\n                if (type === 'JS') {\n\n                    node = document.createElement('script');\n                    node.async = true;\n                    node.defer = true;\n                    node.charset = 'utf-8';\n                } else {\n\n                    node = document.createElement('link');\n                    node.rel = 'stylesheet';\n                }\n\n                node.id = resourcePrefix + '-' + type.toLowerCase() + '-' + instanceName;\n\n                var timerLabel = 'Resource loading ' + type + ' ' + instanceName;\n\n                console.time(timerLabel);\n\n                node.onload = function () {\n\n                    console.timeEnd(timerLabel);\n                    resolve(path);\n                };\n\n                node.onerror = function () {\n\n                    console.timeEnd(timerLabel);\n                    reject(path);\n                };\n\n                if (type === 'JS') {\n\n                    node.src = path;\n                } else {\n\n                    node.href = path;\n                }\n\n                document.head.appendChild(node);\n            });\n        }\n    }]);\n\n    return DOM;\n}();\n\nexports.default = DOM;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/dom.js?")},"./public/app/js/modules/dragndrop.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = function (settings) {\n\n    var defaultHandlers = {\n        findDraggable: function findDraggable(e) {\n\n            return e.target.closest('.' + draggableClass);\n        },\n\n        findDroppable: function findDroppable(e) {\n\n            return document.elementFromPoint(e.clientX, e.clientY).closest('.' + droppableClass);\n        },\n\n        /**\n         * The simplest makeAvatar method.\n         *\n         * Just set elem to avatar.elem. And remembers element position in document.\n         * If drop isn`t success, returns elem to start position.\n         */\n        makeAvatar: function makeAvatar(elem) {\n\n            var avatar = {};\n\n            var avatarRollback = function avatarRollback() {\n\n                avatar.elem.classList.remove('dnd-default-avatar');\n\n                if (avatar.nextSibling) avatar.parentNode.insertBefore(avatar.elem, avatar.nextSibling);else avatar.parentNode.appendChild(avatar.elem);\n\n                delete dragObj.avatar;\n            };\n\n            avatar = {\n                elem: elem,\n                parentNode: elem.parentNode,\n                nextSibling: elem.nextElementSibling,\n                rollback: avatarRollback\n            };\n\n            // Set avatar position: absolute; for drag'n'drop\n            avatar.elem.classList.add('dnd-default-avatar');\n\n            return avatar;\n        },\n\n        /**\n         * Highlights droppable elements under cursor with border\n         */\n        targetChanged: function targetChanged(target, newTarget) {\n\n            if (target) target.classList('dnd-default-target-highlight');\n\n            if (newTarget) newTarget.classList.add('dnd-default-target-highlight');\n        },\n\n        move: function move(e, avatar, shift) {\n\n            avatar.elem.style.left = e.pageX - shift.x + 'px';\n            avatar.elem.style.top = e.pageY - shift.y + 'px';\n        },\n\n        /**\n         * Inserts elem into document if drop is success\n         */\n        targetReached: function targetReached(target, avatar, elem) {\n\n            target.classList.remove('dnd-default-target-highlight');\n            target.parentNode.insertBefore(elem, target.nextElementSibling);\n            avatar.elem.classList.remove('dnd-default-avatar');\n        }\n    };\n\n    var draggableClass = settings.draggableClass || 'draggable',\n        droppableClass = settings.droppableClass || 'droppable',\n        findDraggable = settings.findDraggable || defaultHandlers.findDraggable,\n        findDroppable = settings.findDroppable || defaultHandlers.findDroppable,\n        makeAvatar = settings.makeAvatar || defaultHandlers.makeAvatar,\n        targetChanged = settings.targetChanged || defaultHandlers.targetChanged,\n        move = settings.move || defaultHandlers.move,\n        targetReached = settings.targetReached || defaultHandlers.targetReached;\n\n    var dragObj = {};\n\n    var onMouseDown = function onMouseDown(e) {\n\n        /**\n         * Check mouse (which=1 - right mouse button) or touch (which=0 - touch) event.\n         */\n        if (e.which > 1) return;\n\n        e = touchSupported(e);\n\n        dragObj.clickedAt = {\n            x: e.pageX,\n            y: e.pageY\n        };\n\n        dragObj.elem = findDraggable(e);\n\n        if (!dragObj.elem) return;\n\n        toggleSelection();\n\n        var coords = getCoords(dragObj.elem);\n\n        dragObj.shift = {\n            x: e.pageX - coords.x,\n            y: e.pageY - coords.y\n        };\n    };\n\n    var onMouseMove = function onMouseMove(e) {\n\n        if (!dragObj.elem) return;\n\n        // Prevent touchmove scroll\n        e.preventDefault();\n\n        e = touchSupported(e);\n\n        // Check mouse offset. If x or y offset <5, assume that it`s accidental move\n        if (Math.abs(e.pageX - dragObj.clickedAt.x) < 5 && Math.abs(e.pageY - dragObj.clickedAt.y) < 5) return;\n\n        if (!dragObj.avatar) {\n\n            dragObj.avatar = makeAvatar(dragObj.elem);\n        }\n\n        var newTarget = findDroppable(e);\n\n        if (newTarget != dragObj.target) {\n\n            targetChanged(dragObj.target, newTarget, dragObj.avatar);\n\n            dragObj.target = newTarget;\n        }\n\n        move(e, dragObj.avatar, dragObj.shift);\n    };\n\n    var onMouseUp = function onMouseUp(e) {\n\n        if (e.which > 1) return;\n\n        if (!dragObj.avatar) {\n\n            dragObj = {};\n            return;\n        }\n\n        e = touchSupported(e);\n\n        var target = findDroppable(e);\n\n        if (target) targetReached(target, dragObj.avatar, dragObj.elem, e);else dragObj.avatar.rollback();\n\n        dragObj = {};\n\n        toggleSelection();\n    };\n\n    var getCoords = function getCoords(elem) {\n\n        var rect = elem.getBoundingClientRect();\n\n        return {\n            x: rect.left + window.pageXOffset,\n            y: rect.top + window.pageYOffset\n        };\n    };\n\n    var touchSupported = function touchSupported(e) {\n\n        if (e.changedTouches) var touch = e.changedTouches[0];else return e;\n\n        e.pageX = touch.pageX;\n        e.pageY = touch.pageY;\n\n        e.clientX = touch.clientX;\n        e.clientY = touch.clientY;\n\n        e.screenX = touch.screenX;\n        e.screenY = touch.screenY;\n\n        e.target = touch.target;\n\n        return e;\n    };\n\n    var toggleSelection = function toggleSelection() {\n\n        document.body.classList.toggle('no-selection');\n    };\n\n    document.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('touchstart', onMouseDown);\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('touchmove', onMouseMove);\n\n    document.addEventListener('mouseup', onMouseUp);\n    document.addEventListener('touchend', onMouseUp);\n\n    document.ondragstart = function () {\n\n        return false;\n    };\n};\n\n//# sourceURL=webpack://codex/./public/app/js/modules/dragndrop.js?")},"./public/app/js/modules/helpers.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = function (helpers) {\n\n    helpers.setCookie = function (name, value, expires, path, domain) {\n\n        var str = name + '=' + value;\n\n        if (expires) str += '; expires=' + expires.toGMTString();\n        if (path) str += '; path=' + path;\n        if (domain) str += '; domain=' + domain;\n        document.cookie = str;\n    };\n\n    helpers.getCookie = function (name) {\n\n        var dc = document.cookie;\n\n        var prefix = name + '=';\n        var begin = dc.indexOf('; ' + prefix);\n\n        if (begin == -1) {\n\n            begin = dc.indexOf(prefix);\n            if (begin !== 0) return null;\n        } else begin += 2;\n\n        var end = document.cookie.indexOf(';', begin);\n\n        if (end == -1) end = dc.length;\n\n        return unescape(dc.substring(begin + prefix.length, end));\n    };\n\n    helpers.getOffset = function (el) {\n\n        var _x = 0;\n        var _y = 0;\n\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n\n            _x += el.offsetLeft + el.clientLeft;\n            _y += el.offsetTop + el.clientTop;\n            el = el.offsetParent;\n        }\n        return { top: _y, left: _x };\n    };\n\n    return helpers;\n}({});\n\n//# sourceURL=webpack://codex/./public/app/js/modules/helpers.js?")},"./public/app/js/modules/join.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Module for /join page\n * Blocks writing without authorization\n *\n * Toggles into view blankAdditionalFields: Name and Surname, Email\n */\nvar join = function () {\n\n    var animationClass = 'wobble';\n\n    /**\n    * Module initialization\n    */\n    var init = function init() {\n\n        var joinBlank = document.getElementById('joinBlank');\n\n        if (typeof joinBlank != 'undefined' && joinBlank !== null) {\n\n            var joinBlankTextareas = joinBlank.getElementsByTagName('textarea');\n\n            if (joinBlankTextareas.length) {\n\n                for (var i = joinBlankTextareas.length - 1; i >= 0; i--) {\n\n                    joinBlankTextareas[i].addEventListener('keyup', checkUserCanEdit, false);\n                }\n            }\n        }\n\n        var blankShowAdditionalFieldsButton = document.getElementById('blankShowAdditionalFieldsButton');\n\n        if (typeof blankShowAdditionalFieldsButton != 'undefined' && blankShowAdditionalFieldsButton !== null) {\n\n            blankShowAdditionalFieldsButton.addEventListener('click', showAdditionalFields, false);\n        }\n    };\n\n    /**\n     * Adds wobble-effect to Auth block if user starts typing into textarea unauthorized\n     * @param {Event} event\n     */\n    var checkUserCanEdit = function checkUserCanEdit(event) {\n\n        var textarea = event.target,\n            blankAuthBlock = document.getElementById('js-join-auth'),\n            emailInput = document.getElementById('js-email');\n\n        if (blankAuthBlock && !emailInput.value.length) {\n\n            blankAuthBlock.classList.add(animationClass);\n\n            window.setTimeout(function () {\n                return blankAuthBlock.classList.remove(animationClass);\n            }, 450);\n\n            textarea.value = '';\n        }\n    };\n\n    /**\n     * Toggles into view blankAdditionalFields: Name and Surname, Email\n     * @param {Event} event\n     */\n    var showAdditionalFields = function showAdditionalFields() {\n\n        var blankAdditionalFields = document.getElementById('blankAdditionalFields');\n\n        blankAdditionalFields.classList.toggle('hide');\n    };\n\n    return {\n        init: init\n    };\n}({});\n\nmodule.exports = join;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/join.js?")},"./public/app/js/modules/player.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nmanipulation methods\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n\nvar _dom = __webpack_require__(/*! ./dom */ \"./public/app/js/modules/dom.js\");\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class  Player\n * @classdesc Simple player on the overlay container\n *\n * @typedef {Player}\n * @property {String} sourceURL - video URL\n * @property {Element} toggler  - Play Button\n * @property {Element} wrapper  - In wich Element player should be added\n * @property {Element} overlay  - Player main container\n * @property {Object} CSS       - CSS dictionary\n *\n */\nvar Player = function () {\n\n    /**\n     * @constructor\n     * @param  {String} options.sourceURL        - video URL\n     * @param  {Element} options.toggler         - play button\n     * @param  {String} options.wrapperSelector  - xpath selector for the player holder\n     */\n    function Player(_ref) {\n        var _this = this;\n\n        var sourceURL = _ref.sourceURL,\n            toggler = _ref.toggler,\n            wrapperSelector = _ref.wrapperSelector;\n\n        _classCallCheck(this, Player);\n\n        this.sourceURL = sourceURL;\n        this.toggler = toggler;\n        this.wrapper = document.querySelector(wrapperSelector);\n        this.overlay = null;\n\n        this.CSS = {\n            overlay: 'video-overlay',\n            overlayShowed: 'video-overlay--showed',\n            overlayLoaded: 'video-overlay--loaded',\n            closeButton: 'video-overlay__close'\n        };\n\n        /**\n         * Add Play Button click listener\n         */\n        this.toggler.addEventListener('click', function () {\n\n            _this.showVideoOverlay();\n        }, false);\n    }\n\n    /**\n     * Creates player container and append it to the parent element\n     */\n\n\n    _createClass(Player, [{\n        key: 'showVideoOverlay',\n        value: function showVideoOverlay() {\n            var _this2 = this;\n\n            this.overlay = _dom2.default.make('div', this.CSS.overlay);\n\n            var video = _dom2.default.make('video', null, {\n                autoplay: true,\n                loop: true\n            }),\n                source = _dom2.default.make('source', null, {\n                src: this.sourceURL,\n                type: 'video/mp4'\n            }),\n                closeButton = _dom2.default.make('div', this.CSS.closeButton);\n\n            /**\n             * Append <video>\n             */\n            video.appendChild(source);\n            this.overlay.appendChild(video);\n\n            /**\n             * Bind loading callback\n             */\n            video.addEventListener('loadeddata', function () {\n\n                _this2.videoLoaded();\n            });\n\n            /**\n             * Activate close button\n             */\n            this.overlay.appendChild(closeButton);\n            closeButton.addEventListener('click', function () {\n\n                _this2.close();\n            });\n\n            /**\n             * Add overlay to the wrapper\n             */\n            this.wrapper.appendChild(this.overlay);\n            window.setTimeout(function () {\n\n                _this2.overlay.classList.add(_this2.CSS.overlayShowed);\n            }, 50);\n        }\n\n        /**\n         * Video loaded callback\n         * Shows player\n         */\n\n    }, {\n        key: 'videoLoaded',\n        value: function videoLoaded() {\n\n            this.wrapper.classList.add(this.CSS.overlayLoaded);\n        }\n\n        /**\n         * Removes overlay with video\n         */\n\n    }, {\n        key: 'close',\n        value: function close() {\n\n            this.overlay.remove();\n            this.overlay = null;\n        }\n    }]);\n\n    return Player;\n}();\n\nexports.default = Player;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/player.js?")},"./public/app/js/modules/polyfills.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar polyfills = function () {\n\n    /**\n    * Polyfilling ECMAScript 6 method String.includes\n    * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Browser_compatibility\n    */\n    if (!String.prototype.includes) {\n\n        String.prototype.includes = function () {\n\n            'use strict';\n\n            return String.prototype.indexOf.apply(this, arguments) !== -1;\n        };\n    }\n\n    /**\n    * Polyfill for Element.prototype.matches method\n    */\n    if (!Element.prototype.matches) {\n\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;\n    }\n\n    /**\n    * Polyfill for Element.prototype.closest method\n    */\n    if (!Element.prototype.closest) {\n\n        Element.prototype.closest = function (selector) {\n\n            var node = this;\n\n            while (node) {\n\n                if (node.matches(selector)) return node;\n                node = node.parentElement;\n            }\n\n            return null;\n        };\n    };\n}({});\n\nmodule.exports = polyfills;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/polyfills.js?")},"./public/app/js/modules/profile.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Profile page methods\n */\nmodule.exports = function () {\n\n    /**\n     * Photo uploading success-callback\n     * Fired by transport\n     * @param  {string} newPhotoURL - uploaded file URL\n     */\n    var uploadPhotoSuccess = function uploadPhotoSuccess(newPhotoURL) {\n\n        var settingsPhoto = document.getElementById('profile-photo-updatable'),\n            headerPhoto = document.getElementById('header-avatar-updatable');\n\n        settingsPhoto.src = newPhotoURL;\n        headerPhoto.src = newPhotoURL;\n    };\n\n    return {\n        uploadPhotoSuccess: uploadPhotoSuccess\n    };\n}();\n\n//# sourceURL=webpack://codex/./public/app/js/modules/profile.js?")},"./public/app/js/modules/quiz.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Модуль quiz с единственным публичным методом quiz.init()\n */\nmodule.exports = function () {\n\n    var quizData = null,\n        numberOfQuestions = null,\n        currentQuestion = null,\n        score = null,\n        maxScore = null;\n\n    /**\n     * Публичный метод init.\n     *\n     * @param {object} quizDataInput  - объект с информацией о тесте\n     * @param {string} holder - id элемента, в который будет выводиться тест\n     */\n    var init = function init(quizDataInput, holder) {\n\n        quizData = quizDataInput;\n        numberOfQuestions = quizData.questions.length;\n        currentQuestion = 0;\n        score = 0;\n\n        gameProcessing_.prepare();\n        UI_.prepare(holder);\n        UI_.setupQuestionInterface();\n    };\n\n    var UI_ = {\n\n        holder: null,\n        currentQuestionObj: null,\n\n        // Объект, в котором будут храниться DOM-элементы, связанные с отображением вопроса\n        questionElems: null,\n\n        prepare: function prepare(holder) {\n\n            UI_.holder = document.getElementById(holder);\n            UI_.holder.classList.add('quiz');\n            UI_.holder.classList.add('clearfix');\n        },\n\n        /**\n         * Создаем элементы для вывода теста, заносим их в UI_.questionElems и выводим на страницу.\n         */\n        setupQuestionInterface: function setupQuestionInterface() {\n\n            UI_.clear();\n\n            var title, optionsHolder, counter, nextButton;\n\n            title = UI_.createElem('div', 'quiz__question-title');\n\n            optionsHolder = UI_.createElem('div', 'quiz__question-options');\n\n            counter = UI_.createElem('div', 'quiz__question-counter');\n\n            nextButton = UI_.createElem('input', ['quiz__question-button', 'quiz__question-button_next']);\n\n            nextButton.setAttribute('type', 'button');\n            nextButton.setAttribute('value', 'Далее →');\n\n            UI_.questionElems = {\n                counter: counter,\n                title: title,\n                optionsHolder: optionsHolder,\n                options: [],\n                nextButton: nextButton\n            };\n\n            UI_.append(UI_.questionElems);\n\n            UI_.showQuestion();\n        },\n\n        /**\n         * Выводим текущий вопрос на страницу (вопрос, варианты ответа и счетчик)\n         */\n        showQuestion: function showQuestion() {\n\n            UI_.clear(UI_.questionElems.optionsHolder);\n            UI_.questionElems.options = [];\n            UI_.questionElems.nextButton.removeEventListener('click', UI_.showQuestion);\n            UI_.currentQuestionObj = quizData.questions[currentQuestion];\n\n            UI_.questionElems.nextButton.setAttribute('disabled', true);\n\n            UI_.questionElems.title.textContent = UI_.currentQuestionObj.title;\n            UI_.questionElems.counter.textContent = currentQuestion + 1 + '/' + numberOfQuestions;\n\n            UI_.currentQuestionObj.answers.map(UI_.createOption);\n        },\n\n        answerSelected: function answerSelected(answer) {\n\n            answer.classList.add('quiz__question-answer_selected');\n\n            UI_.questionElems.options.map(function (current) {\n\n                current.removeEventListener('click', gameProcessing_.getUserAnswer);\n            });\n\n            UI_.questionElems.nextButton.disabled = false;\n\n            if (currentQuestion < numberOfQuestions - 1) {\n\n                UI_.questionElems.nextButton.addEventListener('click', UI_.showQuestion);\n            } else {\n\n                UI_.questionElems.nextButton.addEventListener('click', UI_.showResult);\n            }\n\n            UI_.showAnswer(answer);\n\n            currentQuestion++;\n        },\n        /**\n         * Добавляем стили и выводим сообщение для выбранного варианта ответа\n         * Открываем доступ к следующему вопросу\n         *\n         * @param {Element} answer - DOM-элемент выбранного ответа\n         */\n        showAnswer: function showAnswer(answer) {\n\n            var answerStyle = answer.dataset.score > 0 ? '_right' : '_wrong',\n                answerIndex = answer.dataset.index;\n\n            answer.classList.add('quiz__question-answer' + answerStyle);\n\n            var answerMessage = UI_.createElem('div', 'quiz__answer-message');\n\n            answerMessage.textContent = UI_.currentQuestionObj.answers[answerIndex].message;\n\n            UI_.insertAfter(answerMessage, answer);\n\n            if (answer.dataset.score == 0) {\n\n                UI_.showCorrectAnswers();\n            }\n        },\n\n        showCorrectAnswers: function showCorrectAnswers() {\n\n            UI_.questionElems.options.map(function (answer) {\n\n                if (answer.dataset.score > 0) {\n\n                    answer.classList.add('quiz__question-answer_right');\n                } else {\n\n                    answer.classList.add('quiz__question-answer_wrong');\n                }\n            });\n        },\n\n        showResult: function showResult() {\n\n            var result = score + '/' + maxScore;\n\n            UI_.questionElems.nextButton.removeEventListener('click', UI_.showResult);\n\n            UI_.clear();\n\n            var resultScore = UI_.createElem('div', 'quiz__result-score');\n\n            resultScore.textContent = result;\n\n            var resultMessage = UI_.createElem('div', 'quiz__result-message');\n\n            resultMessage.textContent = gameProcessing_.getMessage();\n\n            var social = UI_.createElem('div', 'quiz__sharing');\n\n            UI_.createSocial(social, result);\n\n            var retry = UI_.createElem('div', 'quiz__retry-button');\n\n            retry.textContent = 'Пройти еще раз';\n            retry.addEventListener('click', init.bind(null, quizData, UI_.holder.id));\n\n            UI_.append([resultScore, resultMessage, social, retry]);\n\n            codex.sharer.init();\n        },\n\n        /**\n         * Создаем кнопки социальных сетей и добавляем их в holder\n         *\n         * @param {Element} holder\n         */\n        createSocial: function createSocial(holder, result) {\n\n            var networks = [{\n                title: 'Share on the VK',\n                shareType: 'vkontakte',\n                class: 'vk',\n                icon: 'icon-vkontakte'\n            }, {\n                title: 'Share on the Facebook',\n                shareType: 'facebook',\n                class: 'fb',\n                icon: 'icon-facebook-squared'\n            }, {\n                title: 'Tweet',\n                shareType: 'twitter',\n                class: 'tw',\n                icon: 'icon-twitter'\n            }, {\n                title: 'Forward in Telegramm',\n                shareType: 'telegram',\n                class: 'tg',\n                icon: 'icon-paper-plane'\n            }];\n\n            networks.map(function (current) {\n\n                var button = UI_.createElem('span', ['but', current.class]),\n                    icon = UI_.createElem('i', current.icon),\n                    shareMessage = null;\n\n                button.dataset.shareType = current.shareType;\n                button.setAttribute('title', current.title);\n\n                if (quizData.shareMessage) {\n\n                    shareMessage = quizData.shareMessage.replace('$score', result);\n                }\n\n                shareMessage = shareMessage || 'Я набрал ' + result + ' в ' + (quizData.title || 'тесте от команды CodeX');\n\n                button.dataset.url = window.location.href;\n                button.dataset.title = shareMessage;\n                button.dataset.desc = quizData.description || '';\n\n                UI_.append(icon, button);\n                UI_.append(button, holder);\n            });\n        },\n\n        /**\n         * Создаем i-й вариант ответа и выводим в UI_.questionElems.optionsHolder\n         * И добавляем в UI_.questionElems.options\n         *\n         * @param {Object} answer - объект варианта ответа\n         * @param {int} i - его номер в вопросе\n         */\n        createOption: function createOption(answer, i) {\n\n            var answerObj = UI_.createElem('div', 'quiz__question-answer');\n\n            answerObj.dataset.score = answer.score;\n            answerObj.dataset.index = i;\n            answerObj.textContent = answer.text;\n\n            // Вешаем слушатель на вариант ответа\n            answerObj.addEventListener('click', gameProcessing_.getUserAnswer);\n\n            UI_.questionElems.options.push(answerObj);\n\n            UI_.append(answerObj, UI_.questionElems.optionsHolder);\n        },\n\n        /**\n         * Создает новый DOM-элемент с набором переданных классов\n         *\n         * @param {string} tag - имя тега\n         * @param {string|Array} classes - имя или массив имен классов\n         * @returns {Element}\n         */\n        createElem: function createElem(tag, classes) {\n\n            var elem = document.createElement(tag);\n\n            if (!classes) {\n\n                return elem;\n            }\n\n            if (classes instanceof Array) {\n\n                for (var i in classes) {\n\n                    elem.classList.add(classes[i]);\n                }\n            } else {\n\n                elem.classList.add(classes);\n            }\n\n            return elem;\n        },\n\n        /**\n         * Добавляет элементы в переданный элемент\n         *\n         * @param {Element|Array} elems - элемент или массив элементов\n         * @param {Element|null} parent - родитель или UI_.holder, если передан NULL\n         */\n        append: function append(elems, parent) {\n\n            parent = parent || UI_.holder;\n\n            if (!(elems instanceof Element)) {\n\n                for (var i in elems) {\n\n                    if (elems[i] instanceof Element) {\n\n                        parent.appendChild(elems[i]);\n                    }\n                }\n            } else {\n\n                parent.appendChild(elems);\n            }\n        },\n\n        /**\n         * Вставляет элемент после переданного элемента\n         *\n         * @param {Element} elem\n         * @param {Element} elemBefore\n         */\n        insertAfter: function insertAfter(elem, elemBefore) {\n\n            if (elemBefore.nextSibling) {\n\n                UI_.questionElems.optionsHolder.insertBefore(elem, elemBefore.nextSibling);\n            } else {\n\n                UI_.append(elem, elemBefore.parentNode);\n            }\n        },\n\n        /**\n         * Удалаяет все дочерние элементы элемента parent\n         *\n         * @param {Element} parent\n         */\n        clear: function clear(parent) {\n\n            parent = parent || UI_.holder;\n\n            while (parent.firstChild) {\n\n                parent.removeChild(parent.firstChild);\n            }\n        }\n\n    };\n\n    var gameProcessing_ = {\n\n        prepare: function prepare() {\n\n            maxScore = 0;\n\n            quizData.questions.map(function (question) {\n\n                question.answers.map(function (answer) {\n\n                    maxScore += parseFloat(answer.score);\n                });\n            });\n        },\n\n        /**\n         * Добавляет баллы за ответ\n         *\n         * @param {Object} e - объект события клика по варианту ответа\n         */\n        getUserAnswer: function getUserAnswer(e) {\n\n            var answer = e.currentTarget;\n\n            score += parseFloat(answer.dataset.score);\n\n            UI_.answerSelected(answer);\n        },\n\n        /**\n         * Получает сообщение о результате для набранного количества баллов\n         *\n         * @returns {string} message\n         */\n        getMessage: function getMessage() {\n\n            var messages = quizData.resultMessages,\n                message;\n\n            messages.sort(function (a, b) {\n\n                return a['score'] - b['score'];\n            });\n\n            if (!messages.length) {\n\n                return;\n            }\n\n            for (var i in messages) {\n\n                if (score < messages[i]['score']) {\n\n                    break;\n                }\n\n                message = messages[i]['message'];\n            }\n\n            return message;\n        }\n\n    };\n\n    return {\n        init: init\n    };\n}();\n\n//# sourceURL=webpack://codex/./public/app/js/modules/quiz.js?")},"./public/app/js/modules/quizForm.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n* Quiz form client handler\n* Author: @ndawn\n* Date: 09/12/16\n*/\n\nmodule.exports = function (quiz) {\n\n    /**\n    * Quiz form\n    * @var {null} quiz.form - form DOM element\n    */\n    quiz.form = null;\n\n    /**\n    * Nodes list\n    * @var {object} quiz.nodes - dict of DOM elements of questions and result messages\n    */\n    quiz.nodes = {\n        'title': null,\n        'description': null,\n        'questions': [],\n        'resultMessages': [],\n        'shareMessage': null\n    };\n\n    /**\n    * Question insert button and anchor for new questions\n    * @var {Element} quiz.questionInsertAnchor - DOM element of question insert anchor\n    * @var {Element} quiz.questionInsertButton - DOM element of question insert button\n    */\n    quiz.questionInsertAnchor = null;\n    quiz.questionInsertButton = null;\n\n    /**\n    * Result message insert button and anchor for new resultMessages\n    * @var {Element} quiz.resultMessageInsertAnchor - DOM element of result message insert anchor\n    * @var {Element} quiz.resultMessageInsertButton - DOM element of result message insert button\n    */\n    quiz.resultMessageInsertAnchor = null;\n    quiz.resultMessageInsertButton = null;\n\n    /**\n    * Result messages holder element\n    * @var {Element} quiz.resultMessagesHolder - DOM element of result messages holder\n    */\n    quiz.resultMessagesHolder = null;\n\n    /**\n    * @private\n    * DOM element creating function\n    * Creates a DOM element with given attributes\n    * @param {string} tag - HTML tag of the element\n    * @param {object} attributes - dictionary with attributes to be added to the element\n    */\n    var newDOMElement_ = function newDOMElement_(tag, attributes, text) {\n\n        text = text || '';\n        var element = document.createElement(tag);\n        var textNode = document.createTextNode(text);\n\n        element.appendChild(textNode);\n\n        for (var attr in attributes) {\n\n            var attrNode = document.createAttribute(attr);\n\n            attrNode.value = attributes[attr];\n            element.setAttributeNode(attrNode);\n        }\n\n        return element;\n    };\n\n    /**\n    * @private\n    * Answer block creating function\n    * Creates a couple of DOM elements and appends them to question answers list\n    * @param {number} questionIndex - index of question which answer to be appended to\n    */\n    var appendAnswerBlock_ = function appendAnswerBlock_(questionIndex, answerData) {\n\n        var answer = {};\n        var question = quiz.nodes.questions[questionIndex];\n        var objectIndex = question.answers.length;\n\n        answerData = answerData || {};\n\n        answer.holder = newDOMElement_('tr', {\n            'class': 'quiz-form__question-answer-holder',\n            'data-question-index': questionIndex,\n            'data-object-index': objectIndex\n        });\n\n        answer.textColumn = newDOMElement_('td', {\n            'class': 'quiz-form__question-answer-text-column'\n        });\n\n        answer.text = newDOMElement_('input', {\n            'type': 'text',\n            'class': 'quiz-form__question-answer-text',\n            'value': answerData.text || '',\n            'required': '',\n            'form': 'null'\n        });\n\n        answer.scoreColumn = newDOMElement_('td', {\n            'class': 'quiz-form__question-answer-score-column'\n        });\n\n        answer.score = newDOMElement_('input', {\n            'type': 'number',\n            'min': '0',\n            'step': '1',\n            'value': answerData.score || '0',\n            'class': 'quiz-form__question-answer-score',\n            'required': '',\n            'form': 'null'\n        });\n\n        answer.messageColumn = newDOMElement_('td', {\n            'class': 'quiz-form__question-answer-message-column'\n        });\n\n        answer.message = newDOMElement_('input', {\n            'type': 'text',\n            'class': 'quiz-form__question-answer-message',\n            'value': answerData.message || '',\n            'required': '',\n            'form': 'null'\n        });\n\n        answer.destroyButtonColumn = newDOMElement_('td', {\n            'class': 'quiz-form__question-answer-destroy-button-column'\n        });\n\n        answer.destroyButton = newDOMElement_('span', {\n            'class': 'quiz-form__question-answer-destroy-button'\n        });\n\n        answer.destroyButtonCross = newDOMElement_('img', {\n            'class': 'quiz-form__button-cross',\n            'src': '/public/app/img/quizzes/cross.svg'\n        });\n\n        answer.textColumn.appendChild(answer.text);\n        answer.scoreColumn.appendChild(answer.score);\n        answer.messageColumn.appendChild(answer.message);\n\n        answer.destroyButton.appendChild(answer.destroyButtonCross);\n\n        answer.destroyButtonColumn.appendChild(answer.destroyButton);\n\n        answer.holder.appendChild(answer.textColumn);\n        answer.holder.appendChild(answer.scoreColumn);\n        answer.holder.appendChild(answer.messageColumn);\n        answer.holder.appendChild(answer.destroyButtonColumn);\n\n        question.answers.push(answer);\n\n        insertDOMElement_(answer);\n\n        updateDestroyIcons_(question.answers);\n    };\n\n    /**\n    * @private\n    * Question element creating function\n    * Creates a question JS object with DOM elements in it and appends it to the questions list\n    */\n    var appendQuestionBlock_ = function appendQuestionBlock_(questionData) {\n\n        var question = {};\n        var objectIndex = quiz.nodes.questions.length;\n\n        questionData = questionData || {};\n\n        question.holder = newDOMElement_('div', {\n            'class': 'quiz-form__question-holder',\n            'data-object-index': objectIndex\n        });\n\n        question.number = newDOMElement_('label', {\n            'class': 'quiz-form__question-number'\n        }, 'Вопрос ' + (objectIndex + 1));\n\n        question.destroyButton = newDOMElement_('span', {\n            'class': 'quiz-form__question-destroy-button'\n        });\n\n        question.destroyButtonCross = newDOMElement_('img', {\n            'class': 'quiz-form__button-cross',\n            'src': '/public/app/img/quizzes/cross.svg'\n        });\n\n        question.titleLabel = newDOMElement_('label', {\n            'class': 'quiz-form__label quiz-form__question-title-label'\n        }, 'Заголовок вопроса');\n\n        question.title = newDOMElement_('input', {\n            'type': 'text',\n            'class': 'quiz-form__question-title',\n            'value': questionData.title || '',\n            'required': '',\n            'form': 'null'\n        });\n\n        question.answers = [];\n\n        question.answersHolder = newDOMElement_('table', {\n            'class': 'quiz-form__question-answers-holder'\n        });\n\n        question.answersHead = newDOMElement_('thead', {\n            'class': 'quiz-form__question-answers-head'\n        });\n\n        question.answersLabel = newDOMElement_('th', {\n            'class': 'quiz-form__label quiz-form__question-answers-label'\n        }, 'Ответы');\n\n        question.scoresLabel = newDOMElement_('th', {\n            'class': 'quiz-form__label quiz-form__question-scores-label'\n        }, 'Баллы');\n\n        question.messagesLabel = newDOMElement_('th', {\n            'class': 'quiz-form__label quiz-form__question-messages-label'\n        }, 'Комментарии к ответам');\n\n        question.destroyButtonLabel = newDOMElement_('th', {\n            'class': 'quiz-form__question-destroy-buttons-label'\n        });\n\n        question.addAnswerButtonRow = newDOMElement_('tr', {\n            'class': 'quiz-form__question-add-answer-button-row'\n        });\n\n        question.addAnswerButtonColumn = newDOMElement_('td', {\n            'class': 'quiz-form__question-add-answer-button-column'\n        });\n\n        question.addAnswerButton = newDOMElement_('span', {\n            'class': 'quiz-form__question-add-answer-button'\n        }, 'Добавить ответ');\n\n        question.addAnswerButtonPlus = newDOMElement_('img', {\n            'class': 'quiz-form__button-plus',\n            'src': '/public/app/img/quizzes/plus.svg'\n        });\n\n        question.holder.appendChild(question.number);\n\n        question.destroyButton.appendChild(question.destroyButtonCross);\n\n        question.holder.appendChild(question.destroyButton);\n        question.holder.appendChild(question.titleLabel);\n        question.holder.appendChild(question.title);\n\n        question.answersHead.appendChild(question.answersLabel);\n        question.answersHead.appendChild(question.scoresLabel);\n        question.answersHead.appendChild(question.messagesLabel);\n        question.answersHead.appendChild(question.destroyButtonLabel);\n\n        question.answersHolder.appendChild(question.answersHead);\n\n        question.addAnswerButton.insertBefore(question.addAnswerButtonPlus, question.addAnswerButton.firstChild);\n\n        question.addAnswerButtonColumn.appendChild(question.addAnswerButton);\n\n        question.addAnswerButtonRow.appendChild(question.addAnswerButtonColumn);\n\n        question.answersHolder.appendChild(question.addAnswerButtonRow);\n\n        question.holder.appendChild(question.answersHolder);\n\n        quiz.nodes.questions.push(question);\n\n        if (questionData.answers) {\n\n            questionData.answers.map(function (current) {\n\n                appendAnswerBlock_(objectIndex, current);\n            });\n        } else {\n\n            appendAnswerBlock_(objectIndex);\n            appendAnswerBlock_(objectIndex);\n            appendAnswerBlock_(objectIndex);\n        }\n\n        insertDOMElement_(question);\n\n        updateDestroyIcons_(quiz.nodes.questions);\n    };\n\n    /**\n    * @private\n    * Message block creating function\n    * Creates a result message DOM element and appends it to the result messages list\n    */\n    var appendResultMessageBlock_ = function appendResultMessageBlock_(messageData) {\n\n        var message = {};\n        var objectIndex = quiz.nodes.resultMessages.length;\n\n        messageData = messageData || {};\n\n        message.holder = newDOMElement_('tr', {\n            'class': 'quiz-form__message-holder',\n            'data-object-index': objectIndex\n        });\n\n        message.messageColumn = newDOMElement_('td', {\n            'class': 'quiz-form__message-message-column'\n        });\n\n        message.message = newDOMElement_('input', {\n            'type': 'text',\n            'class': 'quiz-form__message-message',\n            'value': messageData.message || '',\n            'required': '',\n            'form': 'null'\n        });\n\n        message.scoreColumn = newDOMElement_('td', {\n            'class': 'quiz-form__message-score-column'\n        });\n\n        message.score = newDOMElement_('input', {\n            'type': 'number',\n            'min': '0',\n            'step': '1',\n            'value': messageData.score || '0',\n            'class': 'quiz-form__message-score',\n            'required': '',\n            'form': 'null'\n        });\n\n        message.destroyButtonColumn = newDOMElement_('td', {\n            'class': 'quiz-form__message-destroy-button-column'\n        });\n\n        message.destroyButton = newDOMElement_('span', {\n            'class': 'quiz-form__message-destroy-button'\n        });\n\n        message.destroyButtonCross = newDOMElement_('img', {\n            'class': 'quiz-form__button-cross',\n            'src': '/public/app/img/quizzes/cross.svg'\n        });\n\n        message.messageColumn.appendChild(message.message);\n        message.scoreColumn.appendChild(message.score);\n\n        message.destroyButton.appendChild(message.destroyButtonCross);\n\n        message.destroyButtonColumn.appendChild(message.destroyButton);\n\n        message.holder.appendChild(message.messageColumn);\n        message.holder.appendChild(message.scoreColumn);\n        message.holder.appendChild(message.destroyButtonColumn);\n\n        quiz.nodes.resultMessages.push(message);\n\n        insertDOMElement_(message);\n\n        updateDestroyIcons_(quiz.nodes.resultMessages);\n    };\n\n    /**\n    * @private\n    * Object shifting function\n    * Sets numbers in the question with child elements to given index\n    * @param {object} obj - object in which numbers to be set\n    * @param {number} index - index to which child elements' attributes to be set\n    */\n    var setObjectNumber_ = function setObjectNumber_(obj, numberTo) {\n\n        obj.holder.dataset.objectIndex = numberTo - 1;\n\n        if (obj.number) {\n\n            obj.number.textContent = 'Вопрос ' + numberTo;\n        }\n    };\n\n    /**\n    * @private\n    * Updating destroy icons function\n    * Disables or enables destroy icon for the only element in container\n    * @param {object} container - object in which icon is to be disabled or enabled\n    */\n    var updateDestroyIcons_ = function updateDestroyIcons_(container) {\n\n        if (container.length <= 1) {\n\n            container[0].destroyButton.style.display = 'none';\n\n            if (container[0].firstChild) {\n\n                container[0].firstChild.style.display = 'none';\n            }\n        } else {\n\n            container[0].destroyButton.style.display = '';\n\n            if (container[0].firstChild) {\n\n                container[0].firstChild.style.display = '';\n            }\n        }\n    };\n\n    /**\n    * @private\n    * DOM element inserting function\n    * Inserts DOM element to DOM\n    * @param {object} obj - object in which DOM element to be inserted\n    */\n    var insertDOMElement_ = function insertDOMElement_(obj) {\n\n        var before;\n        var parent;\n\n        if (obj.answers) {\n\n            before = quiz.questionInsertAnchor;\n            parent = quiz.form;\n        } else if (obj.text) {\n\n            before = quiz.nodes.questions[parseInt(obj.holder.dataset.questionIndex)].addAnswerButtonRow;\n            parent = quiz.nodes.questions[parseInt(obj.holder.dataset.questionIndex)].answersHolder;\n        } else {\n\n            before = quiz.resultMessageInsertAnchor;\n            parent = quiz.resultMessagesHolder;\n        }\n\n        parent.insertBefore(obj.holder, before);\n    };\n\n    /**\n    * @private\n    * Element object destroying function\n    * Removes the DOM element of object from DOM and destroys object itself\n    * @param {object} container - list where object is to be destroyed\n    * @param {number} elementIndex - index of object in list\n    */\n    var destroyObject_ = function destroyObject_(container, elementIndex) {\n\n        container[elementIndex].holder.parentNode.removeChild(container[elementIndex].holder);\n\n        container.splice(elementIndex, 1);\n        for (var i = elementIndex; i < container.length; i++) {\n\n            setObjectNumber_(container[i], i + 1);\n        }\n\n        updateDestroyIcons_(container);\n    };\n\n    /**\n    * @private\n    * Event listeners setting function\n    * Set event listeners for insert and destroy buttons and form submission\n    */\n    var setEventListeners_ = function setEventListeners_() {\n\n        quiz.form.onsubmit = function (event) {\n\n            event.preventDefault();\n\n            var json = {\n                'title': quiz.form.querySelector('[name=\"title\"]').value,\n                'description': quiz.form.querySelector('[name=\"description\"]').value,\n                'questions': [],\n                'resultMessages': [],\n                'shareMessage': quiz.form.querySelector('[name=\"shareMessage\"]').value\n            };\n\n            for (var i in quiz.nodes.questions) {\n\n                var jsonQuestion = {};\n\n                jsonQuestion.title = quiz.nodes.questions[i].title.value;\n                jsonQuestion.answers = [];\n\n                for (var j in quiz.nodes.questions[i].answers) {\n\n                    var jsonAnswer = {};\n\n                    jsonAnswer.text = quiz.nodes.questions[i].answers[j].text.value;\n                    jsonAnswer.score = quiz.nodes.questions[i].answers[j].score.value;\n                    jsonAnswer.message = quiz.nodes.questions[i].answers[j].message.value;\n\n                    jsonQuestion.answers.push(jsonAnswer);\n                }\n\n                json.questions.push(jsonQuestion);\n            }\n\n            for (var i in quiz.nodes.resultMessages) {\n\n                var jsonMessage = {};\n\n                jsonMessage.score = quiz.nodes.resultMessages[i].score.value;\n                jsonMessage.message = quiz.nodes.resultMessages[i].message.value;\n\n                json.resultMessages.push(jsonMessage);\n            };\n\n            quiz.form.appendChild(newDOMElement_('input', {\n                'type': 'hidden',\n                'name': 'quiz_data',\n                'value': JSON.stringify(json)\n            }));\n\n            quiz.form.submit();\n        };\n\n        quiz.questionInsertButton.onclick = function () {\n\n            appendQuestionBlock_();\n        };\n\n        quiz.resultMessageInsertButton.onclick = function () {\n\n            appendResultMessageBlock_();\n        };\n\n        quiz.form.onclick = function (event) {\n\n            var container;\n            var elementIndex;\n\n            if (event.target.classList.contains('quiz-form__question-destroy-button')) {\n\n                container = quiz.nodes.questions;\n                elementIndex = parseInt(event.target.parentNode.dataset.objectIndex);\n            } else if (event.target.parentNode.classList.contains('quiz-form__question-destroy-button')) {\n\n                container = quiz.nodes.questions;\n                elementIndex = parseInt(event.target.parentNode.parentNode.dataset.objectIndex);\n            } else if (event.target.classList.contains('quiz-form__question-answer-destroy-button')) {\n\n                container = quiz.nodes.questions[parseInt(event.target.parentNode.parentNode.dataset.questionIndex)].answers;\n                elementIndex = parseInt(event.target.parentNode.parentNode.dataset.objectIndex);\n            } else if (event.target.parentNode.classList.contains('quiz-form__question-answer-destroy-button')) {\n\n                container = quiz.nodes.questions[parseInt(event.target.parentNode.parentNode.parentNode.dataset.questionIndex)].answers;\n                elementIndex = parseInt(event.target.parentNode.parentNode.parentNode.dataset.objectIndex);\n            } else if (event.target.classList.contains('quiz-form__message-destroy-button')) {\n\n                container = quiz.nodes.resultMessages;\n                elementIndex = parseInt(event.target.parentNode.parentNode.dataset.objectIndex);\n            } else if (event.target.classList.contains('quiz-form__question-add-answer-button')) {\n\n                container = null;\n                elementIndex = parseInt(event.target.parentNode.parentNode.parentNode.parentNode.dataset.objectIndex);\n            }\n\n            if (container === null) {\n\n                appendAnswerBlock_(elementIndex);\n            } else if (container !== undefined) {\n\n                destroyObject_(container, elementIndex);\n            }\n        };\n    };\n\n    /**\n    * @private\n    * First result message adding function\n    * Inserts result message with number 1 to the form\n    */\n    var addInitialResultMessage_ = function addInitialResultMessage_() {\n\n        appendResultMessageBlock_();\n    };\n\n    /**\n    * @private\n    * First question adding function\n    * Inserts question with number 1 to the form\n    */\n    var addInitialQuestion_ = function addInitialQuestion_() {\n\n        appendQuestionBlock_();\n    };\n\n    /**\n    * @private\n    * Initial form parameters setting adding function\n    * Sets form variable and insert buttons\n    */\n    var setInitialFormParams_ = function setInitialFormParams_() {\n\n        quiz.form = document.forms.quizForm;\n        quiz.questionInsertAnchor = document.getElementById('questionInsertAnchor');\n        quiz.questionInsertButton = document.getElementById('questionInsertButton');\n        quiz.resultMessageInsertAnchor = document.getElementById('resultMessageInsertAnchor');\n        quiz.resultMessageInsertButton = document.getElementById('resultMessageInsertButton');\n        quiz.resultMessagesHolder = document.getElementById('resultMessagesHolder');\n    };\n\n    /**\n    * @private\n    * Initial destroy icons updating function\n    * Updates initially placed destroy icons\n    */\n    var updateInitialDestroyIcons_ = function updateInitialDestroyIcons_() {\n\n        updateDestroyIcons_(quiz.nodes.questions);\n        updateDestroyIcons_(quiz.nodes.resultMessages);\n        updateDestroyIcons_(quiz.nodes.questions[0].answers);\n    };\n\n    var render = function render(quizData) {\n\n        var questions = quizData.questions,\n            resultMessages = quizData.resultMessages;\n\n        document.querySelector('[name=\"title\"]').value = quizData.title;\n        document.querySelector('textarea[name=\"description\"]').textContent = quizData.description;\n        document.querySelector('[name=\"shareMessage\"]').value = quizData.shareMessage;\n\n        setInitialFormParams_();\n\n        resultMessages.map(function (current) {\n\n            appendResultMessageBlock_(current);\n        });\n\n        questions.map(function (current) {\n\n            appendQuestionBlock_(current);\n        });\n\n        setEventListeners_();\n\n        updateInitialDestroyIcons_();\n    };\n\n    /**\n     * @public\n     * Initialization function\n     * Initializes quiz form: inserts initial DOM elements, sets initial event listeners, etc\n     */\n    quiz.init = function (quizData) {\n\n        if (quizData) {\n\n            render(quizData);\n            return;\n        }\n\n        setInitialFormParams_();\n        addInitialQuestion_();\n        addInitialResultMessage_();\n        setEventListeners_();\n        updateInitialDestroyIcons_();\n    };\n\n    return quiz;\n}({});\n\n//# sourceURL=webpack://codex/./public/app/js/modules/quizForm.js?")},"./public/app/js/modules/scrollUp.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n* Module for scroll-up button\n*/\nmodule.exports = function () {\n\n    /**\n    * Page scroll offset to show scroll-up button\n    */\n    var SCROLL_UP_OFFSET = 100,\n        button = null;\n\n    var scrollPage = function scrollPage() {\n\n        window.scrollTo(0, 0);\n    };\n\n    var windowScrollHandler = function windowScrollHandler() {\n\n        if (window.pageYOffset > SCROLL_UP_OFFSET) {\n\n            button.classList.add('show');\n        } else {\n\n            button.classList.remove('show');\n        }\n    };\n\n    /**\n    * Init method\n    * Fired after document is ready\n    */\n\n    var init = function init() {\n\n        /** Find scroll-up button */\n        button = document.createElement('DIV');\n\n        button.classList.add('scroll-up');\n        document.body.appendChild(button);\n\n        /** Bind click event on scroll-up button */\n        button.addEventListener('click', scrollPage);\n\n        /** Global window scroll handler */\n        window.addEventListener('scroll', windowScrollHandler);\n    };\n\n    return {\n        init: init\n    };\n}();\n\n//# sourceURL=webpack://codex/./public/app/js/modules/scrollUp.js?")},"./public/app/js/modules/sharer.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Module for social sharing\n */\nmodule.exports = function (sharer) {\n\n    /**\n     * @param  {Object} data - Info about item we want to share\n     */\n    sharer.vkontakte = function (data) {\n\n        var link = 'https://vk.com/share.php?';\n\n        link += 'url=' + data.url;\n        link += '&title=' + data.title;\n        link += '&description=' + data.desc;\n        link += '&image=' + data.img;\n        link += '&noparse=true';\n\n        sharer.popup(link, 'vkontakte');\n    };\n\n    sharer.facebook = function (data) {\n\n        var FB_APP_ID = 1740455756240878,\n            link = 'https://www.facebook.com/dialog/share?display=popup';\n\n        link += '&app_id=' + FB_APP_ID;\n        link += '&href=' + data.url;\n        link += '&redirect_uri=' + document.location.href;\n\n        sharer.popup(link, 'facebook');\n    };\n    sharer.twitter = function (data) {\n\n        var link = 'https://twitter.com/share?';\n\n        link += 'text=' + data.title;\n        link += '&url=' + data.url;\n        link += '&counturl=' + data.url;\n\n        sharer.popup(link, 'twitter');\n    };\n\n    sharer.telegram = function (data) {\n\n        var link = 'https://telegram.me/share/url';\n\n        link += '?text=' + data.title;\n        link += '&url=' + data.url;\n\n        sharer.popup(link, 'telegram');\n    };\n    /**\n     * @param  {String} url\n     * @param  {String} socialType\n     */\n    sharer.popup = function (url, socialType) {\n\n        window.open(url, '', 'toolbar=0,status=0,width=626,height=436');\n\n        /**\n        * Write analytics goal\n        */\n        if (window.yaCounter32652805) {\n\n            window.yaCounter32652805.reachGoal('article-share', function () {}, this, { type: socialType, url: url });\n        }\n    };\n\n    /**\n     * Init sharer\n     * @param  {String} buttonsSelector  - on wich elements should bind sharing\n     */\n    sharer.init = function (buttonsSelector) {\n\n        console.assert(buttonsSelector, 'Sharer: buttons selector is missed');\n\n        var shareButtons = document.querySelectorAll(buttonsSelector);\n\n        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\n            shareButtons[i].addEventListener('click', sharer.click, true);\n        }\n    };\n    /**\n     * @param  {Event} event\n     */\n    sharer.click = function (event) {\n\n        var target = event.target;\n\n        /**\n        * Social provider stores in data 'shareType' attribute on share-button\n        * But click may be fired on child-element in button, so we need to handle it.\n        */\n        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\n        if (!sharer[type]) return;\n\n        /**\n        * Sanitize share params\n        * @todo test for taint strings\n        */\n        // for (key in window.shareData){\n        //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n        // }\n\n        var shareData = {\n            url: target.dataset.url || target.parentNode.dataset.url,\n            title: target.dataset.title || target.parentNode.dataset.title,\n            desc: target.dataset.desc || target.parentNode.dataset.desc,\n            img: target.dataset.img || target.parentNode.dataset.title\n        };\n\n        /**\n        * Fire click handler\n        */\n\n        sharer[type](shareData);\n    };\n\n    return sharer;\n}({});\n\n//# sourceURL=webpack://codex/./public/app/js/modules/sharer.js?")},"./public/app/js/modules/showMoreNews.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * codex.showMoreNews module\n * Used in news block\n * Reveals more news when appender button is fired\n * Usage onclick=\"codex.showMoreNews.init( this );\"\n */\nvar showMoreNews = function () {\n\n    /**\n       * Helper for 'show more news' button\n       * @param {Element} button   - appender button\n       */\n    var init = function init(button) {\n\n        var PORTION = 5; // Amount of news shown each time appender button is fired\n\n        var news = document.querySelectorAll('.news__list_item'),\n            hided = [];\n\n        for (var i = 0, newsItem; !!(newsItem = news[i]); i++) {\n\n            if (newsItem.classList.contains('news__list_item--hidden')) {\n\n                hided.push(newsItem);\n            }\n        }\n\n        /**\n         * @param {Element} item\n         * Remove PORTION of first elements from array hided\n         */\n        hided.splice(0, PORTION).map(function (item) {\n\n            item.classList.remove('news__list_item--hidden');\n        });\n\n        if (!hided.length) {\n\n            button.classList.add('news__list_item--hidden');\n        }\n    };\n\n    return {\n        init: init\n    };\n}({});\n\nmodule.exports = showMoreNews;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/showMoreNews.js?")},"./public/app/js/modules/transport.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n* Ajax file transport module\n* @author Savchenko Peter (vk.com/specc)\n* @param {Object} transport\n*/\nmodule.exports = function (transport) {\n\n    transport.currentButtonClicked = {};\n\n    /**\n     * @param {Element} buttons\n     */\n    transport.init = function (buttons) {\n\n        transport.form = document.getElementById('transportForm');\n        transport.input = document.getElementById('transportInput');\n\n        for (var i = buttons.length - 1; i >= 0; i--) {\n\n            buttons[i].addEventListener('click', transport.buttonCallback, false);\n        }\n\n        transport.input.addEventListener('change', transport.submitCallback, false);\n    };\n\n    /**\n     * @param {Event} event\n     */\n    transport.buttonCallback = function () {\n\n        var action = this.dataset.action,\n            targetId = this.dataset.id,\n            isMultiple = !!this.dataset.multiple || false;\n\n        transport.fillForm({\n            action: action,\n            id: targetId\n        });\n\n        if (isMultiple) {\n\n            transport.form.multiple = 'multiple';\n        }\n\n        transport.currentButtonClicked = this;\n        transport.input.click();\n    };\n\n    /**\n    * Append hidden inputs to tranport form\n    * @param {Object} data\n    */\n    transport.fillForm = function (data) {\n\n        var input, alreadyAddedInput;\n\n        for (var field in data) {\n\n            if (typeof data[field] == 'undefined') {\n\n                continue;\n            }\n\n            alreadyAddedInput = transport.form.querySelector('input[name=' + field + ']');\n\n            if (typeof alreadyAddedInput != 'undefined' && alreadyAddedInput !== null) {\n\n                input = alreadyAddedInput;\n            } else {\n\n                input = document.createElement('input');\n            }\n\n            input.type = 'hidden';\n            input.name = field;\n            input.value = data[field];\n\n            transport.form.appendChild(input);\n        }\n    };\n\n    transport.submitCallback = function () {\n\n        var FILE_MAX_SIZE = 30 * 1024 * 1024; // 30 MB\n\n        var files = transport.getFileObject(this);\n\n        for (var i = files.length - 1; i >= 0; i--) {\n\n            /** Validate file extension */\n            if (!transport.validateExtension(files[i]) || !transport.validateMIME(files[i])) {\n\n                window.console && console.warn('Wrong file type: %o', +files[i].name);\n                return;\n            }\n\n            /** Validate file size */\n            if (!transport.validateSize(files[i], FILE_MAX_SIZE)) {\n\n                window.console && console.warn('File size exceeded limit: %o MB', files[i].size / (1024 * 1024).toFixed(2));\n                return;\n            }\n        }\n\n        transport.currentButtonClicked.className += ' loading';\n        transport.form.submit();\n    };\n\n    /**\n    * Fires from transport-frame window\n    * @param {Object} response\n    */\n    transport.response = function (response) {\n\n        transport.currentButtonClicked.className = transport.currentButtonClicked.className.replace('loading', '');\n\n        if (response.callback) {\n\n            eval(response.callback);\n        }\n\n        if (response.result) {\n\n            if (response.result == 'error') {\n\n                window.console && console.warn(response.error_description || 'error');\n            }\n        }\n    };\n    /**\n     * @param  {[Element]} fileInput\n     * @return {[type]}           [description]\n     */\n    transport.getFileObject = function (fileInput) {\n\n        if (!fileInput) return false;\n        /**\n        * Workaround with IE that doesn't support File API\n        * @todo test and delete this crutch\n        */\n        return typeof ActiveXObject == 'function' ? new ActiveXObject('Scripting.FileSystemObject').getFile(fileInput.value) : fileInput.files;\n    };\n\n    /**\n     * @param {Object} accept\n     * @param {Object} fileObj\n     * @return {Boolean}\n     */\n    transport.validateMIME = function (fileObj, accept) {\n\n        accept = typeof accept == 'array' ? accept : ['image/jpeg', 'image/png'];\n\n        for (var i = accept.length - 1; i >= 0; i--) {\n\n            if (fileObj.type == accept[i]) return true;\n        }\n        return false;\n    };\n\n    transport.validateExtension = function (fileObj, accept) {\n\n        var ext = fileObj.name.match(/\\.(\\w+)($|#|\\?)/);\n\n        if (!ext) return false;\n\n        ext = ext[1].toLowerCase();\n\n        accept = typeof accept == 'array' ? accept : ['jpg', 'jpeg', 'png'];\n\n        for (var i = accept.length - 1; i >= 0; i--) {\n\n            if (ext == accept[i]) return true;\n        }\n\n        return false;\n    };\n\n    transport.validateSize = function (fileObj, maxSize) {\n\n        return fileObj.size < maxSize;\n    };\n\n    return transport;\n}({});\n\n//# sourceURL=webpack://codex/./public/app/js/modules/transport.js?")},"./public/app/js/modules/vkWidget.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/**\n * Module for VK community widget: https://vk.com/dev/Community\n * Adds vkWidget to page\n */\nvar vkWidget = function () {\n\n    var targetId,\n        targetView,\n        communityId,\n        VK_API_URI = 'https://vk.com/js/api/openapi.js';\n\n    /**\n     * Initialization of module\n     *\n     * @param  {[Object]} params\n     * @param {int} params.id - element id, where widget is appended\n     * @param {int} params.display.mode - widget appearance (\"3\" - show people in the community)\n     * @param {int|string} params.display.width - set widget width to a fixed number or auto\n     * @param {int} params.communityId - id of VK community\n     *\n     * @example\n     * vkWidget.init({\n     *   id: 'vk_groups',\n     *   display: {\n     *       'mode': 3,\n     *       'width': 'auto'\n     *   },\n     *   communityId: 103229636\n     * });\n     */\n    var init = function init(params) {\n\n        targetId = params.id || null, targetView = params.display || { 'mode': 3, 'width': 'auto' }, communityId = params.communityId || 0;\n\n        if (document.getElementById(targetId) == undefined) {\n\n            console.log('Cannot find element with id ' + targetId);\n            return;\n        };\n\n        loadScript();\n    };\n\n    /**\n     * Loads VK Api script to initialize a widget\n     * and appends it to page\n     */\n    var loadScript = function loadScript() {\n\n        var vkApiScript = document.createElement('SCRIPT');\n\n        vkApiScript.src = VK_API_URI;\n\n        vkApiScript.setAttribute('async', 'true');\n\n        vkApiScript.onload = showWidget;\n\n        document.body.appendChild(vkApiScript);\n    };\n\n    /**\n     * Runs widget initiating from vkApi\n     */\n    var showWidget = function showWidget() {\n\n        window.VK.Widgets.Group(targetId, targetView, communityId);\n    };\n\n    return {\n        init: init\n    };\n}({});\n\nmodule.exports = vkWidget;\n\n//# sourceURL=webpack://codex/./public/app/js/modules/vkWidget.js?")}},[["./public/app/js/main.js","runtime~main"]]]);